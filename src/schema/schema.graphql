# import createPostInput from "inputs.graphql"
# import updatePostInput from "inputs.graphql"
# import addUserInput from "inputs.graphql"
# import loginInput from "inputs.graphql"
scalar Date

type Query {
  posts: [Post]!
  users: [UserQuery]
}

type Mutation {
  #posts
  createPost(data: createPostInput!): Post
  updatePost(id: ID!, data: updatePostInput!): Post
  deletePost(id: ID!): Post
  deleteAllPosts: String
  #users
  addUser(data: addUserInput!): User
  updateUser(id: ID!, data: updateUserInput!): User
  deleteUser(id: ID!): User
  #user auth
  login(data: loginInput!): AuthPayload!
}

type Subscription {
  post: Post
}

type Post {
  id: ID!
  title: String!
  description: String
  author: Author!
  createdAt: Date
  updatedAt: Date
}

type Author {
  id: String!
  username: String
}

type User {
  id: ID!
  email: String!
  username: String!
  password: String!
  posts: [String!]!
}

type UserQuery {
  id: ID!
  username: String!
  posts: [String!]!
}

type AuthPayload {
  accessToken: String!
  refreshToken: String!
  message: String
}
